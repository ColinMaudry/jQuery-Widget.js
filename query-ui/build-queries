#!/usr/bin/env node
/*! @license Â©2014 Ruben Verborgh - Multimedia Lab / iMinds / Ghent University */
/* Builds the query files into a JSON file. */

var fs = require('fs'),
    path = require('path');

var queryDir = path.join(__dirname, '/queries/'),
    startFragmentsFile = path.join(__dirname, '/startFragments.json'),
    outputFile = path.join(__dirname, '/queries.json');

// Create a query set for each subfolder
var querySets = fs.readdirSync(queryDir).reduce(function (querySets, dir) {
  return querySets[dir] = readQueries(path.join(queryDir, dir)), querySets;
}, {});

// Create queries for each of the query files in the folder
function readQueries(directory) {
  return fs.readdirSync(directory)
  .filter(function (f) { return /\.sparql$/.test(f); })
  .map(function (queryFile) {
    var query = fs.readFileSync(path.join(directory, queryFile), { encoding: 'utf8' }),
        name = queryFile.replace(/\.\w+$/, ''), priority = 1000;

    // Try to extract the name for the query from a comment line
    var lines = query.split('\n'), firstLine = lines.shift() || '';
    if (firstLine[0] === '#') {
      // Remote the name from the query
      query = lines.join('\n');
      name = firstLine.replace(/#\s*/, '');
      // If the name begins with a number, this number indicates the priority
      if (/^\d/.test(name)) {
        priority = parseInt(name, 10);
        name = name.replace(/^\d\W?\s*/, '');
      }
    }

    return { name: name, priority: priority, sparql: query.trim() };
  })
  .sort(function (a, b) {
    return (a.priority - b.priority) || (a.name.toLowerCase() > b.name.toLowerCase());
  });
}

// Read the start fragments and index them by URL
var startFragments = JSON.parse(fs.readFileSync(startFragmentsFile, { encoding: 'utf8' }));
startFragments = startFragments.reduce(function (startFragments, fragment) {
  return startFragments[fragment.url] = fragment, startFragments;
}, {});

// Write the start fragments and query sets to the output file
fs.writeFileSync(outputFile, JSON.stringify({
  startFragments: startFragments,
  querySets: querySets,
}));
